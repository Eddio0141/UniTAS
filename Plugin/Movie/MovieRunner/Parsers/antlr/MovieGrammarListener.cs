//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MovieGrammar.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MovieGrammarParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]

public interface IMovieGrammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.script"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScript([NotNull] MovieGrammarParser.ScriptContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.script"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScript([NotNull] MovieGrammarParser.ScriptContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] MovieGrammarParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] MovieGrammarParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.scopedProgram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScopedProgram([NotNull] MovieGrammarParser.ScopedProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.scopedProgram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScopedProgram([NotNull] MovieGrammarParser.ScopedProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.actionSeparator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActionSeparator([NotNull] MovieGrammarParser.ActionSeparatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.actionSeparator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActionSeparator([NotNull] MovieGrammarParser.ActionSeparatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAction([NotNull] MovieGrammarParser.ActionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAction([NotNull] MovieGrammarParser.ActionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.actionWithSeparator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActionWithSeparator([NotNull] MovieGrammarParser.ActionWithSeparatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.actionWithSeparator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActionWithSeparator([NotNull] MovieGrammarParser.ActionWithSeparatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.frameAdvance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFrameAdvance([NotNull] MovieGrammarParser.FrameAdvanceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.frameAdvance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFrameAdvance([NotNull] MovieGrammarParser.FrameAdvanceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.breakAction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakAction([NotNull] MovieGrammarParser.BreakActionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.breakAction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakAction([NotNull] MovieGrammarParser.BreakActionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.continueAction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinueAction([NotNull] MovieGrammarParser.ContinueActionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.continueAction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinueAction([NotNull] MovieGrammarParser.ContinueActionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.returnAction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnAction([NotNull] MovieGrammarParser.ReturnActionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.returnAction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnAction([NotNull] MovieGrammarParser.ReturnActionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] MovieGrammarParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] MovieGrammarParser.VariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableAssignment([NotNull] MovieGrammarParser.VariableAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableAssignment([NotNull] MovieGrammarParser.VariableAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.tupleAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleAssignment([NotNull] MovieGrammarParser.TupleAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.tupleAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleAssignment([NotNull] MovieGrammarParser.TupleAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.variableTupleSeparation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableTupleSeparation([NotNull] MovieGrammarParser.VariableTupleSeparationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.variableTupleSeparation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableTupleSeparation([NotNull] MovieGrammarParser.VariableTupleSeparationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.tupleVar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleVar([NotNull] MovieGrammarParser.TupleVarContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.tupleVar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleVar([NotNull] MovieGrammarParser.TupleVarContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.tupleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleExpression([NotNull] MovieGrammarParser.TupleExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.tupleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleExpression([NotNull] MovieGrammarParser.TupleExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>andOr</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndOr([NotNull] MovieGrammarParser.AndOrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>andOr</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndOr([NotNull] MovieGrammarParser.AndOrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>castExpression</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCastExpression([NotNull] MovieGrammarParser.CastExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>castExpression</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCastExpression([NotNull] MovieGrammarParser.CastExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parentheses</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParentheses([NotNull] MovieGrammarParser.ParenthesesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parentheses</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParentheses([NotNull] MovieGrammarParser.ParenthesesContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>multiplyDivide</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplyDivide([NotNull] MovieGrammarParser.MultiplyDivideContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplyDivide</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplyDivide([NotNull] MovieGrammarParser.MultiplyDivideContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>not</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNot([NotNull] MovieGrammarParser.NotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>not</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNot([NotNull] MovieGrammarParser.NotContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>compare</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompare([NotNull] MovieGrammarParser.CompareContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>compare</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompare([NotNull] MovieGrammarParser.CompareContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>addSubtract</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddSubtract([NotNull] MovieGrammarParser.AddSubtractContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>addSubtract</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddSubtract([NotNull] MovieGrammarParser.AddSubtractContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>bitwise</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitwise([NotNull] MovieGrammarParser.BitwiseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>bitwise</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitwise([NotNull] MovieGrammarParser.BitwiseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>bitwiseShift</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitwiseShift([NotNull] MovieGrammarParser.BitwiseShiftContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>bitwiseShift</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitwiseShift([NotNull] MovieGrammarParser.BitwiseShiftContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>terminator</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerminator([NotNull] MovieGrammarParser.TerminatorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>terminator</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerminator([NotNull] MovieGrammarParser.TerminatorContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>flipSign</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFlipSign([NotNull] MovieGrammarParser.FlipSignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>flipSign</c>
	/// labeled alternative in <see cref="MovieGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFlipSign([NotNull] MovieGrammarParser.FlipSignContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.basicType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBasicType([NotNull] MovieGrammarParser.BasicTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.basicType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBasicType([NotNull] MovieGrammarParser.BasicTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString([NotNull] MovieGrammarParser.StringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString([NotNull] MovieGrammarParser.StringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.intType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntType([NotNull] MovieGrammarParser.IntTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.intType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntType([NotNull] MovieGrammarParser.IntTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.floatType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloatType([NotNull] MovieGrammarParser.FloatTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.floatType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloatType([NotNull] MovieGrammarParser.FloatTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBool([NotNull] MovieGrammarParser.BoolContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBool([NotNull] MovieGrammarParser.BoolContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] MovieGrammarParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] MovieGrammarParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.elseIfStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseIfStatement([NotNull] MovieGrammarParser.ElseIfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.elseIfStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseIfStatement([NotNull] MovieGrammarParser.ElseIfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.elseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseStatement([NotNull] MovieGrammarParser.ElseStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.elseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseStatement([NotNull] MovieGrammarParser.ElseStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.methodCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodCall([NotNull] MovieGrammarParser.MethodCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.methodCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodCall([NotNull] MovieGrammarParser.MethodCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.methodCallArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodCallArgs([NotNull] MovieGrammarParser.MethodCallArgsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.methodCallArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodCallArgs([NotNull] MovieGrammarParser.MethodCallArgsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.methodDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDef([NotNull] MovieGrammarParser.MethodDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.methodDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDef([NotNull] MovieGrammarParser.MethodDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.methodDefArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDefArgs([NotNull] MovieGrammarParser.MethodDefArgsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.methodDefArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDefArgs([NotNull] MovieGrammarParser.MethodDefArgsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MovieGrammarParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoop([NotNull] MovieGrammarParser.LoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MovieGrammarParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoop([NotNull] MovieGrammarParser.LoopContext context);
}
